// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using School.Infra.Data;

#nullable disable

namespace School.Infra.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("School.Domain.Entities.SchoolRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SchoolRecords");
                });

            modelBuilder.Entity("School.Domain.Entities.Schooling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schooling");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Infantil"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fundamental"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Médio"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Superior"
                        });
                });

            modelBuilder.Entity("School.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolRecordsId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolingId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SchoolRecordsId")
                        .IsUnique()
                        .HasFilter("[SchoolRecordsId] IS NOT NULL");

                    b.HasIndex("SchoolingId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("School.Domain.Entities.User", b =>
                {
                    b.HasOne("School.Domain.Entities.SchoolRecords", "SchoolRecords")
                        .WithOne("User")
                        .HasForeignKey("School.Domain.Entities.User", "SchoolRecordsId");

                    b.HasOne("School.Domain.Entities.Schooling", "Schooling")
                        .WithMany("Users")
                        .HasForeignKey("SchoolingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolRecords");

                    b.Navigation("Schooling");
                });

            modelBuilder.Entity("School.Domain.Entities.SchoolRecords", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("School.Domain.Entities.Schooling", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
